{
  "workbench.colorTheme": "One Dark Pro ++",
  "editor.fontFamily": "Fira Code",
  "debug.console.fontFamily": "'Fira Code','Consolas','微软雅黑'",
  "editor.tabSize": 2,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "terminal.integrated.fontSize": 14,
  "editor.fontLigatures": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.productIconTheme": "fluent-icons",
  "window.commandCenter": false,
  "editor.defaultFormatter": "xaver.clang-format",
  "python.languageServer": "Pylance",
  "files.eol": "\n", // formatting only supports LF line endings
  // cpp reference
  "cppref.lang": "zh",
  "cppref.searchEngine": "Google",
  // Doxygen Documentation Generator
  // 根据自动生成的注释模板（目前主要体现在函数注释上）
    "doxdocgen.generic.order": [
        "brief",
        "details",
        "param",
        "return"
    ],
    "doxdocgen.generic.paramTemplate": "@param{indent:8}{type}{indent:8}{param}{indent:8} - My Param doc",
    "doxdocgen.generic.returnTemplate": "@return {type} - My Return doc",
    "doxdocgen.generic.splitCasingSmartText": true,
  
    "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true
  },

  // C/C++
  "C_Cpp.default.cppStandard": "c++17",
  "C_Cpp.default.cStandard": "c17",
  "C_Cpp.inlayHints.autoDeclarationTypes.enabled": true,
  "C_Cpp.inlayHints.parameterNames.enabled": false,
  "C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName": false,
  "C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores": true,
  "C_Cpp.inlayHints.referenceOperator.enabled": true,
  "C_Cpp.inlayHints.referenceOperator.showSpace": false,
  "C_Cpp.clang_format_path": "/usr/bin/clang-format",
  "C_Cpp.clang_format_style": "Google",
  "clangd.path": "/usr/bin/clangd",
  // Clangd 运行参数(在终端/命令行输入 clangd --help-list-hidden 可查看更多)
  "clangd.arguments": [
    // compile_commands.json 生成文件夹
    "--compile-commands-dir=${workspaceFolder}/build",
    // 让 Clangd 生成更详细的日志
    "--log=verbose",
    // 输出的 JSON 文件更美观
    "--pretty",
    // 全局补全(输入时弹出的建议将会提供 CMakeLists.txt 里配置的所有文件中可能的符号，会自动补充头文件)
    "--all-scopes-completion",
    // 建议风格：打包(重载函数只会给出一个建议）
    // 相反可以设置为detailed
    "--completion-style=bundled",
    // 跨文件重命名变量
    "--cross-file-rename",
    // 允许补充头文件
    // "--header-insertion=iwyu",
    // 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
    "--header-insertion-decorators",
    // 在后台自动分析文件(基于 complie_commands，我们用CMake生成)
    "--background-index",
    // 启用 Clang-Tidy 以提供「静态检查」
    // "--clang-tidy",
    // Clang-Tidy 静态检查的参数，指出按照哪些规则进行静态检查，详情见「与按照官方文档配置好的 VSCode 相比拥有的优势」
    // 参数后部分的*表示通配符
    // 在参数前加入-，如-modernize-use-trailing-return-type，将会禁用某一规则
    "--clang-tidy-checks=cppcoreguidelines-*,performance-*,bugprone-*,portability-*,modernize-*,google-*",
    // 默认格式化风格: 谷歌开源项目代码指南
    // "--fallback-style=file",
    // 同时开启的任务数量
    "-j=2",
    // pch优化的位置(memory 或 disk，选择memory会增加内存开销，但会提升性能) 推荐在板子上使用disk
    "--pch-storage=disk",
    // 启用这项时，补全函数时，将会给参数提供占位符，键入后按 Tab 可以切换到下一占位符，乃至函数末
    // 我选择禁用
    "--function-arg-placeholders=false",
    // compelie_commands.json 文件的目录位置(相对于工作区，由于 CMake 生成的该文件默认在 build 文件夹中，故设置为 build)
    "--compile-commands-dir=build"
  ],
  // CMake
  "cmake.cmakePath": "/usr/bin/cmake",
  "cmake.buildDirectory": "${workspaceFolder}/build",
  "cmake.configureOnOpen": false,
  "cmake.configureOnEdit": false,
  "cmake.generator": "Unix Makefiles",
  // vim
  "vim.leader": "<space>",
  "editor.lineNumbers": "relative",
  "vim.surround": true,
  "vim.sneak": true,
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.ignorecase": true,
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-s>": false,
    "<C-v>": false,
    "<C-f>": false
  },
  //which key
  "whichkey.bindings": [
    // git
    {
      "key": "g",
      "name": "+Git",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Status",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    // cpp reference
    {
      "key": "C",
      "name": "+CppReference",
      "type": "bindings",
      "bindings": [
        {
          "key": "o",
          "name": "View for this current word",
          "type": "command",
          "command": "cppref.open"
        },
        {
          "key": "s",
          "name": "Search manually",
          "type": "command",
          "command": "cppref.search"
        }
      ]
    },
    // makefile
    {
      "key": "m",
      "name": "+Makefile",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Configure",
          "type": "command",
          "command": "makefile.configure"
        },
        {
          "key": "b",
          "name": "Build the current target",
          "type": "command",
          "command": "makefile.buildTarget"
        },
        {
          "key": "r",
          "name": "Run the select binary target",
          "type": "command",
          "command": "makefile.lanuchRun"
        },
        {
          "key": "d",
          "name": "Debug the selected binary target",
          "type": "command",
          "command": "makefile.launchDebug"
        },
        {
          "key": "t",
          "name": "Select build target",
          "type": "command",
          "command": "makefile.setBuildTarget"
        },
        {
          "key": "n",
          "name": "Select launch target",
          "type": "command",
          "command": "makefile.setLaunchConfiguration"
        },
        {
          "key": "l",
          "name": "Clean",
          "type": "command",
          "command": "makefile.cleanConfigure"
        }
      ]
    },
    //cmake
    {
      "key": "c",
      "name": "+CMake",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Configure",
          "type": "command",
          "command": "cmake.configure"
        },
        {
          "key": "b",
          "name": "Build",
          "type": "command",
          "command": "cmake.build"
        },
        {
          "key": "r",
          "name": "Launch",
          "type": "command",
          "command": "cmake.launchTarget"
        },
        {
          "key": "d",
          "name": "Debug",
          "type": "command",
          "command": "cmake.debugTarget"
        },
        {
          "key": "K",
          "name": "Kits",
          "type": "command",
          "command": "cmake.selectKit"
        },
        {
          "key": "v",
          "name": "Select variant",
          "type": "command",
          "command": "cmake.setVariant"
        },
        {
          "key": "t",
          "name": "Select build target",
          "type": "command",
          "command": "cmake.setDefaultTarget"
        },
        {
          "key": "n",
          "name": "Select launch target",
          "type": "command",
          "command": "cmake.selectLaunchTarget"
        },
        {
          "key": "l",
          "name": "Clean",
          "type": "command",
          "command": "cmake.clean"
        }
      ]
    },
    // file
    {
      "key": "f",
      "name": "+File",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Show all files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "=",
          "name": "format files",
          "type": "command",
          "command": "editor.action.formatDocument"
        },
        {
          "key": "b",
          "name": "Show all files in active group",
          "type": "command",
          "command": "workbench.action.showEditorsInActiveGroup"
        }
      ]
    },
    {
      "key": "/",
      "name": "Search in a project",
      "type": "command",
      "command": "workbench.action.findInFiles"
    }
  ],

  "markdown.copyFiles.destination": {
    "**/*.md": "image/${fileName}"
  },

}
